module Task.pp.generated

imports Analysis
imports Common.pp.generated
imports URI.pp.generated
imports runtime/tmpl/pp

imports libstratego-gpp

strategies
  prettyprint-Section :
    Tasks(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("tasks")]
                  )
                , H(
                    []
                  , [S("")]
                  )
                , a22
                ]
    where a22 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TaskDef|"1")> a]

  prettyprint-TaskDef :
    TaskDef(a, b, c, d, e) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("task ")
                                  , a23
                                  , S(" ")
                                  , b13
                                  , S("=")
                                  ]
                                )
                              , c6
                              , a24
                              , d3
                              ]
    where a23 := <pp-one-Z(prettyprint-TASKID)> a
    where b13 := <pp-one-Z(prettyprint-Deps)> b
    where c6 := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Instruction)> c]
    where a24 := <pp-indent(|"2")> [S("->")]
    where d3 := <pp-indent(|"2")> [ <pp-one-Z(prettyprint-Result)> d
                                  , <pp-one-Z(prettyprint-Reads)> e
                                  ]

  prettyprint-TaskRef :
    TaskRef(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a25]
                    )
                  ]
    where a25 := <pp-one-Z(prettyprint-TASKID)> a

  prettyprint-Deps :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-Deps :
    SDeps(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("s["), a26, S("] ")]
                  )
                ]
    where a26 := <pp-one-Z(prettyprint-DepList)> a

  prettyprint-Deps :
    DDeps(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("d["), a27, S("] ")]
                  )
                ]
    where a27 := <pp-one-Z(prettyprint-DepList)> a

  prettyprint-Deps :
    SDDeps(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ S("s[")
                        , a28
                        , S("] d[")
                        , b14
                        , S("] ")
                        ]
                      )
                    ]
    where a28 := <pp-one-Z(prettyprint-DepList)> a
    where b14 := <pp-one-Z(prettyprint-DepList)> b

  prettyprint-DepList :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a29]
           )
         ]
    where a29 := <pp-H-list(prettyprint-TaskRef|", ")> a

  prettyprint-Instruction :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a30]
           )
         ]
    where a30 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Result :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a31]
           )
         ]
    where a31 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Result :
    Fail() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("fail")]
                )
              ]

  prettyprint-Result :
    DepFail() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("depfail")]
                   )
                 ]

  prettyprint-Result :
    NotExec() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("notexecuted")]
                   )
                 ]

  prettyprint-Reads :
    None() -> [ H(
                  []
                , [S("")]
                )
              ]

  prettyprint-Reads :
    Reads(a) -> [ H(
                    []
                  , [S("")]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("reads")]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [a32]
                  )
                ]
    where a32 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    TaskRef(a) -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("&"), a33]
                    )
                  ]
    where a33 := <pp-one-Z(prettyprint-TASKID)> a

  prettyprint-Term :
    URI(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("/ "), a34, S(" /")]
                )
              ]
    where a34 := <pp-one-Z(prettyprint-URI)> a

  prettyprint-example =
    prettyprint-Section

  prettyprint-example =
    prettyprint-TaskDef

  prettyprint-example =
    prettyprint-TaskRef

  prettyprint-example =
    prettyprint-Deps

  prettyprint-example =
    prettyprint-DepList

  prettyprint-example =
    prettyprint-Instruction

  prettyprint-example =
    prettyprint-Result

  prettyprint-example =
    prettyprint-Reads

  prettyprint-example =
    prettyprint-Term