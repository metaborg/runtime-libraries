module libanalysis2/solver/errors

imports
  signatures/libanalysis2/solver/-
  libanalysis2/namebinding/-
  libanalysis2/prelude/-
  libanalysis2/pp
  libanalysis2/solver/-

rules

  default-message(|defaultmsg): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with msg' := <message-or-default(|defaultmsg,"")> msg

  default-message(|defaultmsg,msgprefix): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with msg' := <message-or-default(|defaultmsg,msgprefix)> msg

  add-messages(|msginfo*,defaultmsg): sol-wm -> sol-wm'
    with sol-wm' := <foldr(!sol-wm,add-message-step(|defaultmsg))> msginfo*

  add-message(|msginfo,defaultmsg): sol-wm -> sol-wm'
    with Message(kind,msg,pos) := msginfo
    where <is-list> pos
    with sol-wm' := <map(!Message(kind,msg,<id>))
                    ;foldr(!sol-wm,add-message-step(|defaultmsg))> pos
  add-message(|msginfo,defaultmsg): sol-wm -> sol-wm'
    with Message(kind,msg,pos) := msginfo
       ; msg' := <message-or-default(|defaultmsg,"");pp-MessageContent> msg
       ; sol-wm' := <add-message> (kind,(pos,msg'),sol-wm)

  add-message-step(|defaultmsg) = ?(msginfo,<id>) ; add-message(|msginfo,defaultmsg)

  add-message: (Error(), error, sol-wm) -> <add-error(|error)> sol-wm
  add-message: (Warning(), warning, sol-wm) -> <add-warning(|warning)> sol-wm
  add-message: (Note(), note, sol-wm) -> <add-note(|note)> sol-wm

  message-or-default(|defaultmsg,msgprefix) =
    ?None() < !defaultmsg + (is-list < ![msgprefix|<id>] + ![msgprefix,<id>])

rules

  postprocess-errors(|rn*): (sol-wm,c*) -> sol-wm'
  with <fromWM> sol-wm => sol
     ; <sol-p;free-var-messages> sol => fmsg*
     ; <map(unsolved-message <+ default-unsolved-message)> c* => umsg*
     ; <add-messages(|[fmsg*,umsg*],"Unknown error")> sol-wm
     ; unresolved-refs(|rn*)
     ; wm-nub => sol-wm'

  free-var-messages = all-vars;nub;map(!Message(Warning(),$[Free variable [<pp-Var>]],<id>))

  unsolved-message = fail

  default-unsolved-message: c -> Message(Error(),$[Unsolved: [<pp-Constraint> c]],None())
