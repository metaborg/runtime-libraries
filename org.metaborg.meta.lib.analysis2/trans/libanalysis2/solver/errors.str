module libanalysis2/solver/errors

imports
  signatures/libanalysis2/solver/-
  libanalysis2/namebinding/-
  libanalysis2/prelude/-
  libanalysis2/pp
  libanalysis2/solver/-

rules

  detail-messages(|detailmsg) = map(detail-message(|detailmsg))

  detail-message(|detailmsg): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with if None() := msg
         then
           msg' := detailmsg
         else
           msg*  := <is-list <+ MkSingleton> msg
         ; dmsg* := <is-list <+ MkSingleton> detailmsg
         ; msg'  := [msg*," (",dmsg*,")"]
         end

  default-messages(|defaultmsg) = map(default-message(|defaultmsg))

  default-message(|defaultmsg): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with if None() := msg
         then
           msg' := defaultmsg
         else
           msg' := msg
         end

  add-messages(s|msginfo*): sol-wm -> sol-wm'
    with sol-wm' := <foldr(!sol-wm,add-message-step(s))> msginfo*

  add-message(s|msginfo): sol-wm -> sol-wm'
    with Message(kind,msg,pos) := <s> msginfo
    where <is-list> pos
    with sol-wm' := <map(!Message(kind,msg,<id>))
                    ;foldr(!sol-wm,add-message-step(s))> pos

  add-message(s|msginfo): sol-wm -> sol-wm'
    with Message(kind,msg,pos) := <s> msginfo
    where <not(is-list)> pos
    with msg' := <pp-MessageContent> msg
       ; sol-wm' := <add-message> (kind,(pos,msg'),sol-wm)

  add-message-step(s) = ?(msginfo,<id>) ; add-message(s|msginfo)

  add-message: (Error(), error, sol-wm) -> <add-error(|error)> sol-wm
  add-message: (Warning(), warning, sol-wm) -> <add-warning(|warning)> sol-wm
  add-message: (Note(), note, sol-wm) -> <add-note(|note)> sol-wm

rules

  postprocess-errors(|rn*): (sol-wm,c*) -> sol-wm'
  with <fromWM> sol-wm => sol
     ; <sol-p;free-var-messages> sol => fmsg*
     ; <map({?c;get-constraint-message;detail-message(|"Unsolved")})> c* => umsg*
     ; <add-messages(id|[fmsg*,umsg*])> sol-wm
     ; unresolved-refs(|rn*)
     ; wm-nub => sol-wm'

  free-var-messages = all-vars;nub;map(!Message(Warning(),$[Free variable [<pp-Var>]],<id>))

  constraint-message = fail

  get-constraint-message =
    ?c
  ; ( (constraint-message ; default-message(|<pp-Constraint> c))
   <+ !Message(Error(),<pp-Constraint> c,None())
    )

