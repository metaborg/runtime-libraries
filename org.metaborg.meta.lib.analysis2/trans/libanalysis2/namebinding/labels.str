module libanalsysi2/namebinding/labels

imports

  signatures/libanalysis2/namebinding/-

rules

  labels = fail
  labels-wf = fail

rules

  nullable: Epsilon() -> Epsilon()
  nullable: Closure(_) -> Epsilon()
  nullable: Concat(r1,r2) -> Epsilon()
    where Epsilon() := <nullable> r1
        ; Epsilon() := <nullable> r2
  nullable: Or(r1,r2) -> Epsilon()
    where Epsilon() := <nullable> r1
        + Epsilon() := <nullable> r2
  nullable: And(r1,r2) -> Epsilon()
    where Epsilon() := <nullable> r1
        ; Epsilon() := <nullable> r2
  nullable: _ -> Empty()
 
  emptiness = ?Empty()
  emptiness = ?Concat(<emptiness>,_) + ?Concat(_,<emptiness>)
  emptiness = ?Or(<emptiness>,<emptiness>)
  emptiness = ?And(<emptiness>,_) + ?And(_,<emptiness>)

  deriv(|l): l -> Epsilon()
  deriv(|l): Closure(r) -> Concat(<deriv(|l)> r, Closure(r))
  deriv(|l): Concat(r1,r2) -> Or(Concat(<deriv(|l)> r1, r2), Concat(<nullable> r1, <deriv(|l)> r2))
  deriv(|l): Or(r1,r2) -> Or(<deriv(|l)> r1, <deriv(|l)> r2)
  deriv(|l): And(r1,r2) -> And(<deriv(|l)> r1, <deriv(|l)> r2)
  deriv(|l): _ -> Empty()
 
  label-lt = ?(D(),l) ; where(not(D() := l)) // D is smaller than all other labels
  label-lt = ?(I(),P()) // I is smaller than P
  
  max-labels = ?L ; filter(\ l -> l where <map(\ l' -> <not(label-lt)> (l,l') \)> L \) ; make-set
  
  labels-lt(|l) = filter(\ l' -> l' where <label-lt> (l',l) \) ; make-set
  
  default-labels-wf = !Concat(Closure(I()),Closure(P()))
