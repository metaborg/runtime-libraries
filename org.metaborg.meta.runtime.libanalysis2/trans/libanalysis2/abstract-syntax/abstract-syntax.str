module libanalysis2/abstract-syntax/abstract-syntax

imports
  runtime/editor/annotations
  runtime/editor/origins
  editor-common.generated

  libanalysis2/prelude/-
  src-gen/signatures/libanalysis2/-

rules
  
  annotate-keys = 
    try(dr-scope-all-end);
    dr-scope-all-start;
    key-counter := <new-counter>;
    rules( NewKey: _ -> <next-counter> key-counter
         );
    topdown(annotate-key);
    try(dr-scope-all-end)

  annotate-key: t -> t{<NewKey>}
  
rules

  get-position: Var(_) -> POfDecl(<id>)
  
  get-position: t{k} -> Pos(k,f,l,c,s,e)
  with <is-string<+is-int> k <+ debug(!"ERROR: Cannot get key for ") ; fail
  with (origin-location-offset <+ debug(!"WARNING: Cannot get origin for ") ; !("",-1,-1,-1,-1)) => (f,l,c,s,e)

  position-to-origin:
    Pos(_,f,l,c,s,e) -> (f,l,c,s,e)

  position-to-key:
    Pos(k,_,_,_,_,_) -> k

rules
 
  apply-annotations(s|aa*): ast -> ast'
  with <topdown(try(apply-annotations-to-term(s|aa*)))> ast => ast'

  apply-annotations-to-term(s|aa*): t{a*} -> t{a''*}
  where a'* := <filter(<lookup> (<id>,aa*));map(s)> a*;
        a''* := [a*,a'*]