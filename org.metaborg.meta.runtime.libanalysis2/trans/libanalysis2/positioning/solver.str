module libanalysis2/positioning/solver

imports
  runtime/editor/origins
  src-gen/signatures/libanalysis2/-
  libanalysis2/positioning/-
  libanalysis2/unification/-
  libanalysis2/solver/-
  libanalysis2/prelude/-
  libanalysis2/pp
 
rules
  
  solve-constraint: (f@CTypeOf(p,ty,pos),sol-wm) -> [res]
  where <is-ground> p
  with <fromWM;sol-p> sol-wm => p*
     ; ( <lookup> (p, p*) => ty'
       < !(sol-wm, [CEqual(ty, ty', pos)])
       + !(<fmap(<sol-set-p(!ty)> (p,<id>))> sol-wm, [])
       ) => res

rules

  is-op: POfDecl(_) -> <id>
  is-op: POfRef(_) -> <id>

  reduce-op(|x*): POfDecl(DeclId(_, _, <id>)) -> <id>
  reduce-op(|x*): POfRef(RefId(_, _, <id>)) -> <id>

rules
  
  unsolved-error: CTypeOf(p,ty,pos) -> (pos,msg)
  with msg := $[Could not unify type of [<pp-Pos> p] with [<pp-Term> ty]]
